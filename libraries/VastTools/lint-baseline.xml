<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 7.4.0-alpha03" type="baseline" client="gradle" dependencies="false" name="AGP (7.4.0-alpha03)" variant="all" version="7.4.0-alpha03">

    <issue
        id="LintError"
        message="Unexpected failure during lint analysis of BaseFragmentAdapter.kt (this is a bug in lint or one of the libraries it depends on)&#xA;&#xA;Message: class androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler tried to access protected method org.jetbrains.uast.kotlin.KotlinUClass.getKtClass()Lorg/jetbrains/kotlin/psi/KtClassOrObject; (androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler is in unnamed module of loader com.intellij.util.lang.UrlClassLoader @c37c1ae; org.jetbrains.uast.kotlin.KotlinUClass is in unnamed module of loader java.net.URLClassLoader @647ea89d)&#xA;&#xA;The crash seems to involve the detector `androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector`.&#xA;You can try disabling it with something like this:&#xA;    android {&#xA;        lint {&#xA;            disable &quot;DialogFragmentCallbacksDetector&quot;&#xA;        }&#xA;    }&#xA;&#xA;Stack: `IllegalAccessError:OnCreateDialogIncorrectCallbackDetector$UastHandler.visitClass(OnCreateDialogIncorrectCallbackDetector.kt:78)←UElementVisitor$DispatchPsiVisitor.visitClass(UElementVisitor.kt:553)←UElementVisitor$DelegatingPsiVisitor.visitClass(UElementVisitor.kt:1162)←AbstractKotlinUClass.accept(AbstractKotlinUClass.kt:43)←ImplementationUtilsKt.acceptList(implementationUtils.kt:29)←UFile$DefaultImpls.accept(UFile.kt:87)←KotlinUFile.accept(KotlinUFile.kt:15)←UastLintUtilsKt.acceptSourceFile(UastLintUtils.kt:515)←UElementVisitor$visitFile$3.run(UElementVisitor.kt:274)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←UElementVisitor.visitFile(UElementVisitor.kt:271)←LintDriver$visitUastDetectors$1.run(LintDriver.kt:2073)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←LintDriver.visitUastDetectors(LintDriver.kt:2073)←LintDriver.visitUast(LintDriver.kt:2032)←LintDriver.runFileDetectors(LintDriver.kt:1421)←LintDriver.checkProject(LintDriver.kt:1185)←LintDriver.checkProjectRoot(LintDriver.kt:645)←LintDriver.access$checkProjectRoot(LintDriver.kt:158)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:459)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:452)←LintDriver.doAnalyze(LintDriver.kt:519)←LintDriver.analyzeOnly(LintDriver.kt:452)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient.run(LintCliClient.kt:289)←LintCliClient.run$default(LintCliClient.kt:272)←LintCliClient.analyzeOnly(LintCliClient.kt:247)←Main.run(Main.java:1675)←Main.run(Main.java:281)←NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)←NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)←DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)←Method.invoke(Method.java:566)←AndroidLintWorkAction.invokeLintMainRunMethod(AndroidLintWorkAction.kt:99)←AndroidLintWorkAction.runLint(AndroidLintWorkAction.kt:88)←AndroidLintWorkAction.execute(AndroidLintWorkAction.kt:65)←DefaultWorkerServer.execute(DefaultWorkerServer.java:63)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:66)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:62)←ClassLoaderUtils.executeInClassloader(ClassLoaderUtils.java:97)←NoIsolationWorkerFactory$1.lambda$execute$0(NoIsolationWorkerFactory.java:62)←AbstractWorker$1.call(AbstractWorker.java:44)←AbstractWorker$1.call(AbstractWorker.java:41)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)←DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)←AbstractWorker.executeWrappedInBuildOperation(AbstractWorker.java:41)←NoIsolationWorkerFactory$1.execute(NoIsolationWorkerFactory.java:59)←DefaultWorkerExecutor.lambda$submitWork$2(DefaultWorkerExecutor.java:205)←FutureTask.run(FutureTask.java:264)←DefaultConditionalExecutionQueue$ExecutionRunner.runExecution(DefaultConditionalExecutionQueue.java:187)←DefaultConditionalExecutionQueue$ExecutionRunner.access$700(DefaultConditionalExecutionQueue.java:120)←DefaultConditionalExecutionQueue$ExecutionRunner$1.run(DefaultConditionalExecutionQueue.java:162)←Factories$1.create(Factories.java:31)←DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:270)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:119)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:124)←DefaultConditionalExecutionQueue$ExecutionRunner.runBatch(DefaultConditionalExecutionQueue.java:157)←DefaultConditionalExecutionQueue$ExecutionRunner.run(DefaultConditionalExecutionQueue.java:126)←Executors$RunnableAdapter.call(Executors.java:515)←FutureTask.run(FutureTask.java:264)←ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)←ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)←ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)←ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)←Thread.run(Thread.java:834)`&#xA;&#xA;You can run with --stacktrace or set environment variable `LINT_PRINT_STACKTRACE=true` to dump a full stacktrace to stdout.">
        <location
            file="src/main/java/com/gcode/vasttools/adapter/BaseFragmentAdapter.kt"/>
    </issue>

    <issue
        id="LintError"
        message="Unexpected failure during lint analysis of VastBaseActivity.kt (this is a bug in lint or one of the libraries it depends on)&#xA;&#xA;Message: class androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler tried to access protected method org.jetbrains.uast.kotlin.KotlinUClass.getKtClass()Lorg/jetbrains/kotlin/psi/KtClassOrObject; (androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler is in unnamed module of loader com.intellij.util.lang.UrlClassLoader @c37c1ae; org.jetbrains.uast.kotlin.KotlinUClass is in unnamed module of loader java.net.URLClassLoader @647ea89d)&#xA;&#xA;The crash seems to involve the detector `androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector`.&#xA;You can try disabling it with something like this:&#xA;    android {&#xA;        lint {&#xA;            disable &quot;DialogFragmentCallbacksDetector&quot;&#xA;        }&#xA;    }&#xA;&#xA;Stack: `IllegalAccessError:OnCreateDialogIncorrectCallbackDetector$UastHandler.visitClass(OnCreateDialogIncorrectCallbackDetector.kt:78)←UElementVisitor$DispatchPsiVisitor.visitClass(UElementVisitor.kt:553)←UElementVisitor$DelegatingPsiVisitor.visitClass(UElementVisitor.kt:1162)←AbstractKotlinUClass.accept(AbstractKotlinUClass.kt:43)←ImplementationUtilsKt.acceptList(implementationUtils.kt:29)←UFile$DefaultImpls.accept(UFile.kt:87)←KotlinUFile.accept(KotlinUFile.kt:15)←UastLintUtilsKt.acceptSourceFile(UastLintUtils.kt:515)←UElementVisitor$visitFile$3.run(UElementVisitor.kt:274)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←UElementVisitor.visitFile(UElementVisitor.kt:271)←LintDriver$visitUastDetectors$1.run(LintDriver.kt:2073)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←LintDriver.visitUastDetectors(LintDriver.kt:2073)←LintDriver.visitUast(LintDriver.kt:2032)←LintDriver.runFileDetectors(LintDriver.kt:1421)←LintDriver.checkProject(LintDriver.kt:1185)←LintDriver.checkProjectRoot(LintDriver.kt:645)←LintDriver.access$checkProjectRoot(LintDriver.kt:158)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:459)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:452)←LintDriver.doAnalyze(LintDriver.kt:519)←LintDriver.analyzeOnly(LintDriver.kt:452)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient.run(LintCliClient.kt:289)←LintCliClient.run$default(LintCliClient.kt:272)←LintCliClient.analyzeOnly(LintCliClient.kt:247)←Main.run(Main.java:1675)←Main.run(Main.java:281)←NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)←NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)←DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)←Method.invoke(Method.java:566)←AndroidLintWorkAction.invokeLintMainRunMethod(AndroidLintWorkAction.kt:99)←AndroidLintWorkAction.runLint(AndroidLintWorkAction.kt:88)←AndroidLintWorkAction.execute(AndroidLintWorkAction.kt:65)←DefaultWorkerServer.execute(DefaultWorkerServer.java:63)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:66)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:62)←ClassLoaderUtils.executeInClassloader(ClassLoaderUtils.java:97)←NoIsolationWorkerFactory$1.lambda$execute$0(NoIsolationWorkerFactory.java:62)←AbstractWorker$1.call(AbstractWorker.java:44)←AbstractWorker$1.call(AbstractWorker.java:41)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)←DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)←AbstractWorker.executeWrappedInBuildOperation(AbstractWorker.java:41)←NoIsolationWorkerFactory$1.execute(NoIsolationWorkerFactory.java:59)←DefaultWorkerExecutor.lambda$submitWork$2(DefaultWorkerExecutor.java:205)←FutureTask.run(FutureTask.java:264)←DefaultConditionalExecutionQueue$ExecutionRunner.runExecution(DefaultConditionalExecutionQueue.java:187)←DefaultConditionalExecutionQueue$ExecutionRunner.access$700(DefaultConditionalExecutionQueue.java:120)←DefaultConditionalExecutionQueue$ExecutionRunner$1.run(DefaultConditionalExecutionQueue.java:162)←Factories$1.create(Factories.java:31)←DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:270)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:119)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:124)←DefaultConditionalExecutionQueue$ExecutionRunner.runBatch(DefaultConditionalExecutionQueue.java:157)←DefaultConditionalExecutionQueue$ExecutionRunner.run(DefaultConditionalExecutionQueue.java:126)←Executors$RunnableAdapter.call(Executors.java:515)←FutureTask.run(FutureTask.java:264)←ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)←ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)←ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)←ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)←Thread.run(Thread.java:834)`&#xA;&#xA;You can run with --stacktrace or set environment variable `LINT_PRINT_STACKTRACE=true` to dump a full stacktrace to stdout.">
        <location
            file="src/main/java/com/gcode/vasttools/activity/VastBaseActivity.kt"/>
    </issue>

    <issue
        id="LintError"
        message="Unexpected failure during lint analysis of VastBaseAppCompatActivity.kt (this is a bug in lint or one of the libraries it depends on)&#xA;&#xA;Message: class androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler tried to access protected method org.jetbrains.uast.kotlin.KotlinUClass.getKtClass()Lorg/jetbrains/kotlin/psi/KtClassOrObject; (androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler is in unnamed module of loader com.intellij.util.lang.UrlClassLoader @c37c1ae; org.jetbrains.uast.kotlin.KotlinUClass is in unnamed module of loader java.net.URLClassLoader @647ea89d)&#xA;&#xA;The crash seems to involve the detector `androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector`.&#xA;You can try disabling it with something like this:&#xA;    android {&#xA;        lint {&#xA;            disable &quot;DialogFragmentCallbacksDetector&quot;&#xA;        }&#xA;    }&#xA;&#xA;Stack: `IllegalAccessError:OnCreateDialogIncorrectCallbackDetector$UastHandler.visitClass(OnCreateDialogIncorrectCallbackDetector.kt:78)←UElementVisitor$DispatchPsiVisitor.visitClass(UElementVisitor.kt:553)←UElementVisitor$DelegatingPsiVisitor.visitClass(UElementVisitor.kt:1162)←AbstractKotlinUClass.accept(AbstractKotlinUClass.kt:43)←ImplementationUtilsKt.acceptList(implementationUtils.kt:29)←UFile$DefaultImpls.accept(UFile.kt:87)←KotlinUFile.accept(KotlinUFile.kt:15)←UastLintUtilsKt.acceptSourceFile(UastLintUtils.kt:515)←UElementVisitor$visitFile$3.run(UElementVisitor.kt:274)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←UElementVisitor.visitFile(UElementVisitor.kt:271)←LintDriver$visitUastDetectors$1.run(LintDriver.kt:2073)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←LintDriver.visitUastDetectors(LintDriver.kt:2073)←LintDriver.visitUast(LintDriver.kt:2032)←LintDriver.runFileDetectors(LintDriver.kt:1421)←LintDriver.checkProject(LintDriver.kt:1185)←LintDriver.checkProjectRoot(LintDriver.kt:645)←LintDriver.access$checkProjectRoot(LintDriver.kt:158)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:459)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:452)←LintDriver.doAnalyze(LintDriver.kt:519)←LintDriver.analyzeOnly(LintDriver.kt:452)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient.run(LintCliClient.kt:289)←LintCliClient.run$default(LintCliClient.kt:272)←LintCliClient.analyzeOnly(LintCliClient.kt:247)←Main.run(Main.java:1675)←Main.run(Main.java:281)←NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)←NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)←DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)←Method.invoke(Method.java:566)←AndroidLintWorkAction.invokeLintMainRunMethod(AndroidLintWorkAction.kt:99)←AndroidLintWorkAction.runLint(AndroidLintWorkAction.kt:88)←AndroidLintWorkAction.execute(AndroidLintWorkAction.kt:65)←DefaultWorkerServer.execute(DefaultWorkerServer.java:63)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:66)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:62)←ClassLoaderUtils.executeInClassloader(ClassLoaderUtils.java:97)←NoIsolationWorkerFactory$1.lambda$execute$0(NoIsolationWorkerFactory.java:62)←AbstractWorker$1.call(AbstractWorker.java:44)←AbstractWorker$1.call(AbstractWorker.java:41)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)←DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)←AbstractWorker.executeWrappedInBuildOperation(AbstractWorker.java:41)←NoIsolationWorkerFactory$1.execute(NoIsolationWorkerFactory.java:59)←DefaultWorkerExecutor.lambda$submitWork$2(DefaultWorkerExecutor.java:205)←FutureTask.run(FutureTask.java:264)←DefaultConditionalExecutionQueue$ExecutionRunner.runExecution(DefaultConditionalExecutionQueue.java:187)←DefaultConditionalExecutionQueue$ExecutionRunner.access$700(DefaultConditionalExecutionQueue.java:120)←DefaultConditionalExecutionQueue$ExecutionRunner$1.run(DefaultConditionalExecutionQueue.java:162)←Factories$1.create(Factories.java:31)←DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:270)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:119)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:124)←DefaultConditionalExecutionQueue$ExecutionRunner.runBatch(DefaultConditionalExecutionQueue.java:157)←DefaultConditionalExecutionQueue$ExecutionRunner.run(DefaultConditionalExecutionQueue.java:126)←Executors$RunnableAdapter.call(Executors.java:515)←FutureTask.run(FutureTask.java:264)←ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)←ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)←ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)←ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)←Thread.run(Thread.java:834)`&#xA;&#xA;You can run with --stacktrace or set environment variable `LINT_PRINT_STACKTRACE=true` to dump a full stacktrace to stdout.">
        <location
            file="src/main/java/com/gcode/vasttools/activity/VastBaseAppCompatActivity.kt"/>
    </issue>

    <issue
        id="LintError"
        message="Unexpected failure during lint analysis of VastBaseFragment.kt (this is a bug in lint or one of the libraries it depends on)&#xA;&#xA;Message: class androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler tried to access protected method org.jetbrains.uast.kotlin.KotlinUClass.getKtClass()Lorg/jetbrains/kotlin/psi/KtClassOrObject; (androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler is in unnamed module of loader com.intellij.util.lang.UrlClassLoader @c37c1ae; org.jetbrains.uast.kotlin.KotlinUClass is in unnamed module of loader java.net.URLClassLoader @647ea89d)&#xA;&#xA;The crash seems to involve the detector `androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector`.&#xA;You can try disabling it with something like this:&#xA;    android {&#xA;        lint {&#xA;            disable &quot;DialogFragmentCallbacksDetector&quot;&#xA;        }&#xA;    }&#xA;&#xA;Stack: `IllegalAccessError:OnCreateDialogIncorrectCallbackDetector$UastHandler.visitClass(OnCreateDialogIncorrectCallbackDetector.kt:78)←UElementVisitor$DispatchPsiVisitor.visitClass(UElementVisitor.kt:553)←UElementVisitor$DelegatingPsiVisitor.visitClass(UElementVisitor.kt:1162)←AbstractKotlinUClass.accept(AbstractKotlinUClass.kt:43)←ImplementationUtilsKt.acceptList(implementationUtils.kt:29)←UFile$DefaultImpls.accept(UFile.kt:87)←KotlinUFile.accept(KotlinUFile.kt:15)←UastLintUtilsKt.acceptSourceFile(UastLintUtils.kt:515)←UElementVisitor$visitFile$3.run(UElementVisitor.kt:274)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←UElementVisitor.visitFile(UElementVisitor.kt:271)←LintDriver$visitUastDetectors$1.run(LintDriver.kt:2073)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←LintDriver.visitUastDetectors(LintDriver.kt:2073)←LintDriver.visitUast(LintDriver.kt:2032)←LintDriver.runFileDetectors(LintDriver.kt:1421)←LintDriver.checkProject(LintDriver.kt:1185)←LintDriver.checkProjectRoot(LintDriver.kt:645)←LintDriver.access$checkProjectRoot(LintDriver.kt:158)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:459)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:452)←LintDriver.doAnalyze(LintDriver.kt:519)←LintDriver.analyzeOnly(LintDriver.kt:452)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient.run(LintCliClient.kt:289)←LintCliClient.run$default(LintCliClient.kt:272)←LintCliClient.analyzeOnly(LintCliClient.kt:247)←Main.run(Main.java:1675)←Main.run(Main.java:281)←NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)←NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)←DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)←Method.invoke(Method.java:566)←AndroidLintWorkAction.invokeLintMainRunMethod(AndroidLintWorkAction.kt:99)←AndroidLintWorkAction.runLint(AndroidLintWorkAction.kt:88)←AndroidLintWorkAction.execute(AndroidLintWorkAction.kt:65)←DefaultWorkerServer.execute(DefaultWorkerServer.java:63)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:66)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:62)←ClassLoaderUtils.executeInClassloader(ClassLoaderUtils.java:97)←NoIsolationWorkerFactory$1.lambda$execute$0(NoIsolationWorkerFactory.java:62)←AbstractWorker$1.call(AbstractWorker.java:44)←AbstractWorker$1.call(AbstractWorker.java:41)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)←DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)←AbstractWorker.executeWrappedInBuildOperation(AbstractWorker.java:41)←NoIsolationWorkerFactory$1.execute(NoIsolationWorkerFactory.java:59)←DefaultWorkerExecutor.lambda$submitWork$2(DefaultWorkerExecutor.java:205)←FutureTask.run(FutureTask.java:264)←DefaultConditionalExecutionQueue$ExecutionRunner.runExecution(DefaultConditionalExecutionQueue.java:187)←DefaultConditionalExecutionQueue$ExecutionRunner.access$700(DefaultConditionalExecutionQueue.java:120)←DefaultConditionalExecutionQueue$ExecutionRunner$1.run(DefaultConditionalExecutionQueue.java:162)←Factories$1.create(Factories.java:31)←DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:270)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:119)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:124)←DefaultConditionalExecutionQueue$ExecutionRunner.runBatch(DefaultConditionalExecutionQueue.java:157)←DefaultConditionalExecutionQueue$ExecutionRunner.run(DefaultConditionalExecutionQueue.java:126)←Executors$RunnableAdapter.call(Executors.java:515)←FutureTask.run(FutureTask.java:264)←ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)←ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)←ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)←ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)←Thread.run(Thread.java:834)`&#xA;&#xA;You can run with --stacktrace or set environment variable `LINT_PRINT_STACKTRACE=true` to dump a full stacktrace to stdout.">
        <location
            file="src/main/java/com/gcode/vasttools/fragment/VastBaseFragment.kt"/>
    </issue>

    <issue
        id="LintError"
        message="Unexpected failure during lint analysis of VastSkinActivityLifecycle.kt (this is a bug in lint or one of the libraries it depends on)&#xA;&#xA;Message: class androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler tried to access protected method org.jetbrains.uast.kotlin.KotlinUClass.getKtClass()Lorg/jetbrains/kotlin/psi/KtClassOrObject; (androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler is in unnamed module of loader com.intellij.util.lang.UrlClassLoader @c37c1ae; org.jetbrains.uast.kotlin.KotlinUClass is in unnamed module of loader java.net.URLClassLoader @647ea89d)&#xA;&#xA;The crash seems to involve the detector `androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector`.&#xA;You can try disabling it with something like this:&#xA;    android {&#xA;        lint {&#xA;            disable &quot;DialogFragmentCallbacksDetector&quot;&#xA;        }&#xA;    }&#xA;&#xA;Stack: `IllegalAccessError:OnCreateDialogIncorrectCallbackDetector$UastHandler.visitClass(OnCreateDialogIncorrectCallbackDetector.kt:78)←UElementVisitor$DispatchPsiVisitor.visitClass(UElementVisitor.kt:553)←UElementVisitor$DelegatingPsiVisitor.visitClass(UElementVisitor.kt:1162)←AbstractKotlinUClass.accept(AbstractKotlinUClass.kt:43)←ImplementationUtilsKt.acceptList(implementationUtils.kt:29)←UFile$DefaultImpls.accept(UFile.kt:87)←KotlinUFile.accept(KotlinUFile.kt:15)←UastLintUtilsKt.acceptSourceFile(UastLintUtils.kt:515)←UElementVisitor$visitFile$3.run(UElementVisitor.kt:274)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←UElementVisitor.visitFile(UElementVisitor.kt:271)←LintDriver$visitUastDetectors$1.run(LintDriver.kt:2073)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←LintDriver.visitUastDetectors(LintDriver.kt:2073)←LintDriver.visitUast(LintDriver.kt:2032)←LintDriver.runFileDetectors(LintDriver.kt:1421)←LintDriver.checkProject(LintDriver.kt:1185)←LintDriver.checkProjectRoot(LintDriver.kt:645)←LintDriver.access$checkProjectRoot(LintDriver.kt:158)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:459)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:452)←LintDriver.doAnalyze(LintDriver.kt:519)←LintDriver.analyzeOnly(LintDriver.kt:452)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient.run(LintCliClient.kt:289)←LintCliClient.run$default(LintCliClient.kt:272)←LintCliClient.analyzeOnly(LintCliClient.kt:247)←Main.run(Main.java:1675)←Main.run(Main.java:281)←NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)←NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)←DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)←Method.invoke(Method.java:566)←AndroidLintWorkAction.invokeLintMainRunMethod(AndroidLintWorkAction.kt:99)←AndroidLintWorkAction.runLint(AndroidLintWorkAction.kt:88)←AndroidLintWorkAction.execute(AndroidLintWorkAction.kt:65)←DefaultWorkerServer.execute(DefaultWorkerServer.java:63)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:66)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:62)←ClassLoaderUtils.executeInClassloader(ClassLoaderUtils.java:97)←NoIsolationWorkerFactory$1.lambda$execute$0(NoIsolationWorkerFactory.java:62)←AbstractWorker$1.call(AbstractWorker.java:44)←AbstractWorker$1.call(AbstractWorker.java:41)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)←DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)←AbstractWorker.executeWrappedInBuildOperation(AbstractWorker.java:41)←NoIsolationWorkerFactory$1.execute(NoIsolationWorkerFactory.java:59)←DefaultWorkerExecutor.lambda$submitWork$2(DefaultWorkerExecutor.java:205)←FutureTask.run(FutureTask.java:264)←DefaultConditionalExecutionQueue$ExecutionRunner.runExecution(DefaultConditionalExecutionQueue.java:187)←DefaultConditionalExecutionQueue$ExecutionRunner.access$700(DefaultConditionalExecutionQueue.java:120)←DefaultConditionalExecutionQueue$ExecutionRunner$1.run(DefaultConditionalExecutionQueue.java:162)←Factories$1.create(Factories.java:31)←DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:270)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:119)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:124)←DefaultConditionalExecutionQueue$ExecutionRunner.runBatch(DefaultConditionalExecutionQueue.java:157)←DefaultConditionalExecutionQueue$ExecutionRunner.run(DefaultConditionalExecutionQueue.java:126)←Executors$RunnableAdapter.call(Executors.java:515)←FutureTask.run(FutureTask.java:264)←ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)←ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)←ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)←ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)←Thread.run(Thread.java:834)`&#xA;&#xA;You can run with --stacktrace or set environment variable `LINT_PRINT_STACKTRACE=true` to dump a full stacktrace to stdout.">
        <location
            file="src/main/java/com/gcode/vasttools/skin/VastSkinActivityLifecycle.kt"/>
    </issue>

    <issue
        id="LintError"
        message="Unexpected failure during lint analysis of VastSkinAttribute.kt (this is a bug in lint or one of the libraries it depends on)&#xA;&#xA;Message: class androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler tried to access protected method org.jetbrains.uast.kotlin.KotlinUClass.getKtClass()Lorg/jetbrains/kotlin/psi/KtClassOrObject; (androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler is in unnamed module of loader com.intellij.util.lang.UrlClassLoader @c37c1ae; org.jetbrains.uast.kotlin.KotlinUClass is in unnamed module of loader java.net.URLClassLoader @647ea89d)&#xA;&#xA;The crash seems to involve the detector `androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector`.&#xA;You can try disabling it with something like this:&#xA;    android {&#xA;        lint {&#xA;            disable &quot;DialogFragmentCallbacksDetector&quot;&#xA;        }&#xA;    }&#xA;&#xA;Stack: `IllegalAccessError:OnCreateDialogIncorrectCallbackDetector$UastHandler.visitClass(OnCreateDialogIncorrectCallbackDetector.kt:78)←UElementVisitor$DispatchPsiVisitor.visitClass(UElementVisitor.kt:553)←UElementVisitor$DelegatingPsiVisitor.visitClass(UElementVisitor.kt:1162)←AbstractKotlinUClass.accept(AbstractKotlinUClass.kt:43)←ImplementationUtilsKt.acceptList(implementationUtils.kt:29)←UFile$DefaultImpls.accept(UFile.kt:87)←KotlinUFile.accept(KotlinUFile.kt:15)←UastLintUtilsKt.acceptSourceFile(UastLintUtils.kt:515)←UElementVisitor$visitFile$3.run(UElementVisitor.kt:274)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←UElementVisitor.visitFile(UElementVisitor.kt:271)←LintDriver$visitUastDetectors$1.run(LintDriver.kt:2073)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←LintDriver.visitUastDetectors(LintDriver.kt:2073)←LintDriver.visitUast(LintDriver.kt:2032)←LintDriver.runFileDetectors(LintDriver.kt:1421)←LintDriver.checkProject(LintDriver.kt:1185)←LintDriver.checkProjectRoot(LintDriver.kt:645)←LintDriver.access$checkProjectRoot(LintDriver.kt:158)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:459)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:452)←LintDriver.doAnalyze(LintDriver.kt:519)←LintDriver.analyzeOnly(LintDriver.kt:452)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient.run(LintCliClient.kt:289)←LintCliClient.run$default(LintCliClient.kt:272)←LintCliClient.analyzeOnly(LintCliClient.kt:247)←Main.run(Main.java:1675)←Main.run(Main.java:281)←NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)←NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)←DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)←Method.invoke(Method.java:566)←AndroidLintWorkAction.invokeLintMainRunMethod(AndroidLintWorkAction.kt:99)←AndroidLintWorkAction.runLint(AndroidLintWorkAction.kt:88)←AndroidLintWorkAction.execute(AndroidLintWorkAction.kt:65)←DefaultWorkerServer.execute(DefaultWorkerServer.java:63)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:66)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:62)←ClassLoaderUtils.executeInClassloader(ClassLoaderUtils.java:97)←NoIsolationWorkerFactory$1.lambda$execute$0(NoIsolationWorkerFactory.java:62)←AbstractWorker$1.call(AbstractWorker.java:44)←AbstractWorker$1.call(AbstractWorker.java:41)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)←DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)←AbstractWorker.executeWrappedInBuildOperation(AbstractWorker.java:41)←NoIsolationWorkerFactory$1.execute(NoIsolationWorkerFactory.java:59)←DefaultWorkerExecutor.lambda$submitWork$2(DefaultWorkerExecutor.java:205)←FutureTask.run(FutureTask.java:264)←DefaultConditionalExecutionQueue$ExecutionRunner.runExecution(DefaultConditionalExecutionQueue.java:187)←DefaultConditionalExecutionQueue$ExecutionRunner.access$700(DefaultConditionalExecutionQueue.java:120)←DefaultConditionalExecutionQueue$ExecutionRunner$1.run(DefaultConditionalExecutionQueue.java:162)←Factories$1.create(Factories.java:31)←DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:270)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:119)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:124)←DefaultConditionalExecutionQueue$ExecutionRunner.runBatch(DefaultConditionalExecutionQueue.java:157)←DefaultConditionalExecutionQueue$ExecutionRunner.run(DefaultConditionalExecutionQueue.java:126)←Executors$RunnableAdapter.call(Executors.java:515)←FutureTask.run(FutureTask.java:264)←ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)←ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)←ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)←ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)←Thread.run(Thread.java:834)`&#xA;&#xA;You can run with --stacktrace or set environment variable `LINT_PRINT_STACKTRACE=true` to dump a full stacktrace to stdout.">
        <location
            file="src/main/java/com/gcode/vasttools/skin/VastSkinAttribute.kt"/>
    </issue>

    <issue
        id="LintError"
        message="Unexpected failure during lint analysis of VastSkinLayoutInflaterFactory.kt (this is a bug in lint or one of the libraries it depends on)&#xA;&#xA;Message: class androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler tried to access protected method org.jetbrains.uast.kotlin.KotlinUClass.getKtClass()Lorg/jetbrains/kotlin/psi/KtClassOrObject; (androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler is in unnamed module of loader com.intellij.util.lang.UrlClassLoader @c37c1ae; org.jetbrains.uast.kotlin.KotlinUClass is in unnamed module of loader java.net.URLClassLoader @647ea89d)&#xA;&#xA;The crash seems to involve the detector `androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector`.&#xA;You can try disabling it with something like this:&#xA;    android {&#xA;        lint {&#xA;            disable &quot;DialogFragmentCallbacksDetector&quot;&#xA;        }&#xA;    }&#xA;&#xA;Stack: `IllegalAccessError:OnCreateDialogIncorrectCallbackDetector$UastHandler.visitClass(OnCreateDialogIncorrectCallbackDetector.kt:78)←UElementVisitor$DispatchPsiVisitor.visitClass(UElementVisitor.kt:553)←UElementVisitor$DelegatingPsiVisitor.visitClass(UElementVisitor.kt:1162)←AbstractKotlinUClass.accept(AbstractKotlinUClass.kt:43)←ImplementationUtilsKt.acceptList(implementationUtils.kt:29)←UFile$DefaultImpls.accept(UFile.kt:87)←KotlinUFile.accept(KotlinUFile.kt:15)←UastLintUtilsKt.acceptSourceFile(UastLintUtils.kt:515)←UElementVisitor$visitFile$3.run(UElementVisitor.kt:274)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←UElementVisitor.visitFile(UElementVisitor.kt:271)←LintDriver$visitUastDetectors$1.run(LintDriver.kt:2073)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←LintDriver.visitUastDetectors(LintDriver.kt:2073)←LintDriver.visitUast(LintDriver.kt:2032)←LintDriver.runFileDetectors(LintDriver.kt:1421)←LintDriver.checkProject(LintDriver.kt:1185)←LintDriver.checkProjectRoot(LintDriver.kt:645)←LintDriver.access$checkProjectRoot(LintDriver.kt:158)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:459)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:452)←LintDriver.doAnalyze(LintDriver.kt:519)←LintDriver.analyzeOnly(LintDriver.kt:452)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient.run(LintCliClient.kt:289)←LintCliClient.run$default(LintCliClient.kt:272)←LintCliClient.analyzeOnly(LintCliClient.kt:247)←Main.run(Main.java:1675)←Main.run(Main.java:281)←NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)←NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)←DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)←Method.invoke(Method.java:566)←AndroidLintWorkAction.invokeLintMainRunMethod(AndroidLintWorkAction.kt:99)←AndroidLintWorkAction.runLint(AndroidLintWorkAction.kt:88)←AndroidLintWorkAction.execute(AndroidLintWorkAction.kt:65)←DefaultWorkerServer.execute(DefaultWorkerServer.java:63)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:66)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:62)←ClassLoaderUtils.executeInClassloader(ClassLoaderUtils.java:97)←NoIsolationWorkerFactory$1.lambda$execute$0(NoIsolationWorkerFactory.java:62)←AbstractWorker$1.call(AbstractWorker.java:44)←AbstractWorker$1.call(AbstractWorker.java:41)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)←DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)←AbstractWorker.executeWrappedInBuildOperation(AbstractWorker.java:41)←NoIsolationWorkerFactory$1.execute(NoIsolationWorkerFactory.java:59)←DefaultWorkerExecutor.lambda$submitWork$2(DefaultWorkerExecutor.java:205)←FutureTask.run(FutureTask.java:264)←DefaultConditionalExecutionQueue$ExecutionRunner.runExecution(DefaultConditionalExecutionQueue.java:187)←DefaultConditionalExecutionQueue$ExecutionRunner.access$700(DefaultConditionalExecutionQueue.java:120)←DefaultConditionalExecutionQueue$ExecutionRunner$1.run(DefaultConditionalExecutionQueue.java:162)←Factories$1.create(Factories.java:31)←DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:270)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:119)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:124)←DefaultConditionalExecutionQueue$ExecutionRunner.runBatch(DefaultConditionalExecutionQueue.java:157)←DefaultConditionalExecutionQueue$ExecutionRunner.run(DefaultConditionalExecutionQueue.java:126)←Executors$RunnableAdapter.call(Executors.java:515)←FutureTask.run(FutureTask.java:264)←ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)←ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)←ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)←ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)←Thread.run(Thread.java:834)`&#xA;&#xA;You can run with --stacktrace or set environment variable `LINT_PRINT_STACKTRACE=true` to dump a full stacktrace to stdout.">
        <location
            file="src/main/java/com/gcode/vasttools/skin/VastSkinLayoutInflaterFactory.kt"/>
    </issue>

    <issue
        id="LintError"
        message="Unexpected failure during lint analysis of VastSkinManager.kt (this is a bug in lint or one of the libraries it depends on)&#xA;&#xA;Message: class androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler tried to access protected method org.jetbrains.uast.kotlin.KotlinUClass.getKtClass()Lorg/jetbrains/kotlin/psi/KtClassOrObject; (androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler is in unnamed module of loader com.intellij.util.lang.UrlClassLoader @c37c1ae; org.jetbrains.uast.kotlin.KotlinUClass is in unnamed module of loader java.net.URLClassLoader @647ea89d)&#xA;&#xA;The crash seems to involve the detector `androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector`.&#xA;You can try disabling it with something like this:&#xA;    android {&#xA;        lint {&#xA;            disable &quot;DialogFragmentCallbacksDetector&quot;&#xA;        }&#xA;    }&#xA;&#xA;Stack: `IllegalAccessError:OnCreateDialogIncorrectCallbackDetector$UastHandler.visitClass(OnCreateDialogIncorrectCallbackDetector.kt:78)←UElementVisitor$DispatchPsiVisitor.visitClass(UElementVisitor.kt:553)←UElementVisitor$DelegatingPsiVisitor.visitClass(UElementVisitor.kt:1162)←AbstractKotlinUClass.accept(AbstractKotlinUClass.kt:43)←ImplementationUtilsKt.acceptList(implementationUtils.kt:29)←UFile$DefaultImpls.accept(UFile.kt:87)←KotlinUFile.accept(KotlinUFile.kt:15)←UastLintUtilsKt.acceptSourceFile(UastLintUtils.kt:515)←UElementVisitor$visitFile$3.run(UElementVisitor.kt:274)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←UElementVisitor.visitFile(UElementVisitor.kt:271)←LintDriver$visitUastDetectors$1.run(LintDriver.kt:2073)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←LintDriver.visitUastDetectors(LintDriver.kt:2073)←LintDriver.visitUast(LintDriver.kt:2032)←LintDriver.runFileDetectors(LintDriver.kt:1421)←LintDriver.checkProject(LintDriver.kt:1185)←LintDriver.checkProjectRoot(LintDriver.kt:645)←LintDriver.access$checkProjectRoot(LintDriver.kt:158)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:459)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:452)←LintDriver.doAnalyze(LintDriver.kt:519)←LintDriver.analyzeOnly(LintDriver.kt:452)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient.run(LintCliClient.kt:289)←LintCliClient.run$default(LintCliClient.kt:272)←LintCliClient.analyzeOnly(LintCliClient.kt:247)←Main.run(Main.java:1675)←Main.run(Main.java:281)←NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)←NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)←DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)←Method.invoke(Method.java:566)←AndroidLintWorkAction.invokeLintMainRunMethod(AndroidLintWorkAction.kt:99)←AndroidLintWorkAction.runLint(AndroidLintWorkAction.kt:88)←AndroidLintWorkAction.execute(AndroidLintWorkAction.kt:65)←DefaultWorkerServer.execute(DefaultWorkerServer.java:63)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:66)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:62)←ClassLoaderUtils.executeInClassloader(ClassLoaderUtils.java:97)←NoIsolationWorkerFactory$1.lambda$execute$0(NoIsolationWorkerFactory.java:62)←AbstractWorker$1.call(AbstractWorker.java:44)←AbstractWorker$1.call(AbstractWorker.java:41)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)←DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)←AbstractWorker.executeWrappedInBuildOperation(AbstractWorker.java:41)←NoIsolationWorkerFactory$1.execute(NoIsolationWorkerFactory.java:59)←DefaultWorkerExecutor.lambda$submitWork$2(DefaultWorkerExecutor.java:205)←FutureTask.run(FutureTask.java:264)←DefaultConditionalExecutionQueue$ExecutionRunner.runExecution(DefaultConditionalExecutionQueue.java:187)←DefaultConditionalExecutionQueue$ExecutionRunner.access$700(DefaultConditionalExecutionQueue.java:120)←DefaultConditionalExecutionQueue$ExecutionRunner$1.run(DefaultConditionalExecutionQueue.java:162)←Factories$1.create(Factories.java:31)←DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:270)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:119)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:124)←DefaultConditionalExecutionQueue$ExecutionRunner.runBatch(DefaultConditionalExecutionQueue.java:157)←DefaultConditionalExecutionQueue$ExecutionRunner.run(DefaultConditionalExecutionQueue.java:126)←Executors$RunnableAdapter.call(Executors.java:515)←FutureTask.run(FutureTask.java:264)←ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)←ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)←ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)←ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)←Thread.run(Thread.java:834)`&#xA;&#xA;You can run with --stacktrace or set environment variable `LINT_PRINT_STACKTRACE=true` to dump a full stacktrace to stdout.">
        <location
            file="src/main/java/com/gcode/vasttools/skin/VastSkinManager.kt"/>
    </issue>

    <issue
        id="LintError"
        message="Unexpected failure during lint analysis of VastSkinPair.kt (this is a bug in lint or one of the libraries it depends on)&#xA;&#xA;Message: class androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler tried to access protected method org.jetbrains.uast.kotlin.KotlinUClass.getKtClass()Lorg/jetbrains/kotlin/psi/KtClassOrObject; (androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler is in unnamed module of loader com.intellij.util.lang.UrlClassLoader @c37c1ae; org.jetbrains.uast.kotlin.KotlinUClass is in unnamed module of loader java.net.URLClassLoader @647ea89d)&#xA;&#xA;The crash seems to involve the detector `androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector`.&#xA;You can try disabling it with something like this:&#xA;    android {&#xA;        lint {&#xA;            disable &quot;DialogFragmentCallbacksDetector&quot;&#xA;        }&#xA;    }&#xA;&#xA;Stack: `IllegalAccessError:OnCreateDialogIncorrectCallbackDetector$UastHandler.visitClass(OnCreateDialogIncorrectCallbackDetector.kt:78)←UElementVisitor$DispatchPsiVisitor.visitClass(UElementVisitor.kt:553)←UElementVisitor$DelegatingPsiVisitor.visitClass(UElementVisitor.kt:1162)←AbstractKotlinUClass.accept(AbstractKotlinUClass.kt:43)←ImplementationUtilsKt.acceptList(implementationUtils.kt:29)←UFile$DefaultImpls.accept(UFile.kt:87)←KotlinUFile.accept(KotlinUFile.kt:15)←UastLintUtilsKt.acceptSourceFile(UastLintUtils.kt:515)←UElementVisitor$visitFile$3.run(UElementVisitor.kt:274)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←UElementVisitor.visitFile(UElementVisitor.kt:271)←LintDriver$visitUastDetectors$1.run(LintDriver.kt:2073)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←LintDriver.visitUastDetectors(LintDriver.kt:2073)←LintDriver.visitUast(LintDriver.kt:2032)←LintDriver.runFileDetectors(LintDriver.kt:1421)←LintDriver.checkProject(LintDriver.kt:1185)←LintDriver.checkProjectRoot(LintDriver.kt:645)←LintDriver.access$checkProjectRoot(LintDriver.kt:158)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:459)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:452)←LintDriver.doAnalyze(LintDriver.kt:519)←LintDriver.analyzeOnly(LintDriver.kt:452)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient.run(LintCliClient.kt:289)←LintCliClient.run$default(LintCliClient.kt:272)←LintCliClient.analyzeOnly(LintCliClient.kt:247)←Main.run(Main.java:1675)←Main.run(Main.java:281)←NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)←NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)←DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)←Method.invoke(Method.java:566)←AndroidLintWorkAction.invokeLintMainRunMethod(AndroidLintWorkAction.kt:99)←AndroidLintWorkAction.runLint(AndroidLintWorkAction.kt:88)←AndroidLintWorkAction.execute(AndroidLintWorkAction.kt:65)←DefaultWorkerServer.execute(DefaultWorkerServer.java:63)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:66)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:62)←ClassLoaderUtils.executeInClassloader(ClassLoaderUtils.java:97)←NoIsolationWorkerFactory$1.lambda$execute$0(NoIsolationWorkerFactory.java:62)←AbstractWorker$1.call(AbstractWorker.java:44)←AbstractWorker$1.call(AbstractWorker.java:41)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)←DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)←AbstractWorker.executeWrappedInBuildOperation(AbstractWorker.java:41)←NoIsolationWorkerFactory$1.execute(NoIsolationWorkerFactory.java:59)←DefaultWorkerExecutor.lambda$submitWork$2(DefaultWorkerExecutor.java:205)←FutureTask.run(FutureTask.java:264)←DefaultConditionalExecutionQueue$ExecutionRunner.runExecution(DefaultConditionalExecutionQueue.java:187)←DefaultConditionalExecutionQueue$ExecutionRunner.access$700(DefaultConditionalExecutionQueue.java:120)←DefaultConditionalExecutionQueue$ExecutionRunner$1.run(DefaultConditionalExecutionQueue.java:162)←Factories$1.create(Factories.java:31)←DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:270)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:119)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:124)←DefaultConditionalExecutionQueue$ExecutionRunner.runBatch(DefaultConditionalExecutionQueue.java:157)←DefaultConditionalExecutionQueue$ExecutionRunner.run(DefaultConditionalExecutionQueue.java:126)←Executors$RunnableAdapter.call(Executors.java:515)←FutureTask.run(FutureTask.java:264)←ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)←ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)←ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)←ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)←Thread.run(Thread.java:834)`&#xA;&#xA;You can run with --stacktrace or set environment variable `LINT_PRINT_STACKTRACE=true` to dump a full stacktrace to stdout.">
        <location
            file="src/main/java/com/gcode/vasttools/skin/model/VastSkinPair.kt"/>
    </issue>

    <issue
        id="LintError"
        message="Unexpected failure during lint analysis of VastSkinResources.kt (this is a bug in lint or one of the libraries it depends on)&#xA;&#xA;Message: class androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler tried to access protected method org.jetbrains.uast.kotlin.KotlinUClass.getKtClass()Lorg/jetbrains/kotlin/psi/KtClassOrObject; (androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler is in unnamed module of loader com.intellij.util.lang.UrlClassLoader @c37c1ae; org.jetbrains.uast.kotlin.KotlinUClass is in unnamed module of loader java.net.URLClassLoader @647ea89d)&#xA;&#xA;The crash seems to involve the detector `androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector`.&#xA;You can try disabling it with something like this:&#xA;    android {&#xA;        lint {&#xA;            disable &quot;DialogFragmentCallbacksDetector&quot;&#xA;        }&#xA;    }&#xA;&#xA;Stack: `IllegalAccessError:OnCreateDialogIncorrectCallbackDetector$UastHandler.visitClass(OnCreateDialogIncorrectCallbackDetector.kt:78)←UElementVisitor$DispatchPsiVisitor.visitClass(UElementVisitor.kt:553)←UElementVisitor$DelegatingPsiVisitor.visitClass(UElementVisitor.kt:1162)←AbstractKotlinUClass.accept(AbstractKotlinUClass.kt:43)←ImplementationUtilsKt.acceptList(implementationUtils.kt:29)←UFile$DefaultImpls.accept(UFile.kt:87)←KotlinUFile.accept(KotlinUFile.kt:15)←UastLintUtilsKt.acceptSourceFile(UastLintUtils.kt:515)←UElementVisitor$visitFile$3.run(UElementVisitor.kt:274)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←UElementVisitor.visitFile(UElementVisitor.kt:271)←LintDriver$visitUastDetectors$1.run(LintDriver.kt:2073)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←LintDriver.visitUastDetectors(LintDriver.kt:2073)←LintDriver.visitUast(LintDriver.kt:2032)←LintDriver.runFileDetectors(LintDriver.kt:1421)←LintDriver.checkProject(LintDriver.kt:1185)←LintDriver.checkProjectRoot(LintDriver.kt:645)←LintDriver.access$checkProjectRoot(LintDriver.kt:158)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:459)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:452)←LintDriver.doAnalyze(LintDriver.kt:519)←LintDriver.analyzeOnly(LintDriver.kt:452)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient.run(LintCliClient.kt:289)←LintCliClient.run$default(LintCliClient.kt:272)←LintCliClient.analyzeOnly(LintCliClient.kt:247)←Main.run(Main.java:1675)←Main.run(Main.java:281)←NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)←NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)←DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)←Method.invoke(Method.java:566)←AndroidLintWorkAction.invokeLintMainRunMethod(AndroidLintWorkAction.kt:99)←AndroidLintWorkAction.runLint(AndroidLintWorkAction.kt:88)←AndroidLintWorkAction.execute(AndroidLintWorkAction.kt:65)←DefaultWorkerServer.execute(DefaultWorkerServer.java:63)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:66)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:62)←ClassLoaderUtils.executeInClassloader(ClassLoaderUtils.java:97)←NoIsolationWorkerFactory$1.lambda$execute$0(NoIsolationWorkerFactory.java:62)←AbstractWorker$1.call(AbstractWorker.java:44)←AbstractWorker$1.call(AbstractWorker.java:41)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)←DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)←AbstractWorker.executeWrappedInBuildOperation(AbstractWorker.java:41)←NoIsolationWorkerFactory$1.execute(NoIsolationWorkerFactory.java:59)←DefaultWorkerExecutor.lambda$submitWork$2(DefaultWorkerExecutor.java:205)←FutureTask.run(FutureTask.java:264)←DefaultConditionalExecutionQueue$ExecutionRunner.runExecution(DefaultConditionalExecutionQueue.java:187)←DefaultConditionalExecutionQueue$ExecutionRunner.access$700(DefaultConditionalExecutionQueue.java:120)←DefaultConditionalExecutionQueue$ExecutionRunner$1.run(DefaultConditionalExecutionQueue.java:162)←Factories$1.create(Factories.java:31)←DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:270)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:119)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:124)←DefaultConditionalExecutionQueue$ExecutionRunner.runBatch(DefaultConditionalExecutionQueue.java:157)←DefaultConditionalExecutionQueue$ExecutionRunner.run(DefaultConditionalExecutionQueue.java:126)←Executors$RunnableAdapter.call(Executors.java:515)←FutureTask.run(FutureTask.java:264)←ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)←ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)←ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)←ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)←Thread.run(Thread.java:834)`&#xA;&#xA;You can run with --stacktrace or set environment variable `LINT_PRINT_STACKTRACE=true` to dump a full stacktrace to stdout.">
        <location
            file="src/main/java/com/gcode/vasttools/skin/utils/VastSkinResources.kt"/>
    </issue>

    <issue
        id="LintError"
        message="Unexpected failure during lint analysis of VastSkinUtils.kt (this is a bug in lint or one of the libraries it depends on)&#xA;&#xA;Message: class androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler tried to access protected method org.jetbrains.uast.kotlin.KotlinUClass.getKtClass()Lorg/jetbrains/kotlin/psi/KtClassOrObject; (androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler is in unnamed module of loader com.intellij.util.lang.UrlClassLoader @c37c1ae; org.jetbrains.uast.kotlin.KotlinUClass is in unnamed module of loader java.net.URLClassLoader @647ea89d)&#xA;&#xA;The crash seems to involve the detector `androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector`.&#xA;You can try disabling it with something like this:&#xA;    android {&#xA;        lint {&#xA;            disable &quot;DialogFragmentCallbacksDetector&quot;&#xA;        }&#xA;    }&#xA;&#xA;Stack: `IllegalAccessError:OnCreateDialogIncorrectCallbackDetector$UastHandler.visitClass(OnCreateDialogIncorrectCallbackDetector.kt:78)←UElementVisitor$DispatchPsiVisitor.visitClass(UElementVisitor.kt:553)←UElementVisitor$DelegatingPsiVisitor.visitClass(UElementVisitor.kt:1162)←AbstractKotlinUClass.accept(AbstractKotlinUClass.kt:43)←ImplementationUtilsKt.acceptList(implementationUtils.kt:29)←UFile$DefaultImpls.accept(UFile.kt:87)←KotlinUFile.accept(KotlinUFile.kt:15)←UastLintUtilsKt.acceptSourceFile(UastLintUtils.kt:515)←UElementVisitor$visitFile$3.run(UElementVisitor.kt:274)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←UElementVisitor.visitFile(UElementVisitor.kt:271)←LintDriver$visitUastDetectors$1.run(LintDriver.kt:2073)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←LintDriver.visitUastDetectors(LintDriver.kt:2073)←LintDriver.visitUast(LintDriver.kt:2032)←LintDriver.runFileDetectors(LintDriver.kt:1421)←LintDriver.checkProject(LintDriver.kt:1185)←LintDriver.checkProjectRoot(LintDriver.kt:645)←LintDriver.access$checkProjectRoot(LintDriver.kt:158)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:459)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:452)←LintDriver.doAnalyze(LintDriver.kt:519)←LintDriver.analyzeOnly(LintDriver.kt:452)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient.run(LintCliClient.kt:289)←LintCliClient.run$default(LintCliClient.kt:272)←LintCliClient.analyzeOnly(LintCliClient.kt:247)←Main.run(Main.java:1675)←Main.run(Main.java:281)←NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)←NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)←DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)←Method.invoke(Method.java:566)←AndroidLintWorkAction.invokeLintMainRunMethod(AndroidLintWorkAction.kt:99)←AndroidLintWorkAction.runLint(AndroidLintWorkAction.kt:88)←AndroidLintWorkAction.execute(AndroidLintWorkAction.kt:65)←DefaultWorkerServer.execute(DefaultWorkerServer.java:63)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:66)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:62)←ClassLoaderUtils.executeInClassloader(ClassLoaderUtils.java:97)←NoIsolationWorkerFactory$1.lambda$execute$0(NoIsolationWorkerFactory.java:62)←AbstractWorker$1.call(AbstractWorker.java:44)←AbstractWorker$1.call(AbstractWorker.java:41)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)←DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)←AbstractWorker.executeWrappedInBuildOperation(AbstractWorker.java:41)←NoIsolationWorkerFactory$1.execute(NoIsolationWorkerFactory.java:59)←DefaultWorkerExecutor.lambda$submitWork$2(DefaultWorkerExecutor.java:205)←FutureTask.run(FutureTask.java:264)←DefaultConditionalExecutionQueue$ExecutionRunner.runExecution(DefaultConditionalExecutionQueue.java:187)←DefaultConditionalExecutionQueue$ExecutionRunner.access$700(DefaultConditionalExecutionQueue.java:120)←DefaultConditionalExecutionQueue$ExecutionRunner$1.run(DefaultConditionalExecutionQueue.java:162)←Factories$1.create(Factories.java:31)←DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:270)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:119)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:124)←DefaultConditionalExecutionQueue$ExecutionRunner.runBatch(DefaultConditionalExecutionQueue.java:157)←DefaultConditionalExecutionQueue$ExecutionRunner.run(DefaultConditionalExecutionQueue.java:126)←Executors$RunnableAdapter.call(Executors.java:515)←FutureTask.run(FutureTask.java:264)←ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)←ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)←ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)←ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)←Thread.run(Thread.java:834)`&#xA;&#xA;You can run with --stacktrace or set environment variable `LINT_PRINT_STACKTRACE=true` to dump a full stacktrace to stdout.">
        <location
            file="src/main/java/com/gcode/vasttools/skin/utils/VastSkinUtils.kt"/>
    </issue>

    <issue
        id="LintError"
        message="Unexpected failure during lint analysis of VastSkinView.kt (this is a bug in lint or one of the libraries it depends on)&#xA;&#xA;Message: class androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler tried to access protected method org.jetbrains.uast.kotlin.KotlinUClass.getKtClass()Lorg/jetbrains/kotlin/psi/KtClassOrObject; (androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler is in unnamed module of loader com.intellij.util.lang.UrlClassLoader @c37c1ae; org.jetbrains.uast.kotlin.KotlinUClass is in unnamed module of loader java.net.URLClassLoader @647ea89d)&#xA;&#xA;The crash seems to involve the detector `androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector`.&#xA;You can try disabling it with something like this:&#xA;    android {&#xA;        lint {&#xA;            disable &quot;DialogFragmentCallbacksDetector&quot;&#xA;        }&#xA;    }&#xA;&#xA;Stack: `IllegalAccessError:OnCreateDialogIncorrectCallbackDetector$UastHandler.visitClass(OnCreateDialogIncorrectCallbackDetector.kt:78)←UElementVisitor$DispatchPsiVisitor.visitClass(UElementVisitor.kt:553)←UElementVisitor$DelegatingPsiVisitor.visitClass(UElementVisitor.kt:1162)←AbstractKotlinUClass.accept(AbstractKotlinUClass.kt:43)←ImplementationUtilsKt.acceptList(implementationUtils.kt:29)←UFile$DefaultImpls.accept(UFile.kt:87)←KotlinUFile.accept(KotlinUFile.kt:15)←UastLintUtilsKt.acceptSourceFile(UastLintUtils.kt:515)←UElementVisitor$visitFile$3.run(UElementVisitor.kt:274)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←UElementVisitor.visitFile(UElementVisitor.kt:271)←LintDriver$visitUastDetectors$1.run(LintDriver.kt:2073)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←LintDriver.visitUastDetectors(LintDriver.kt:2073)←LintDriver.visitUast(LintDriver.kt:2032)←LintDriver.runFileDetectors(LintDriver.kt:1421)←LintDriver.checkProject(LintDriver.kt:1185)←LintDriver.checkProjectRoot(LintDriver.kt:645)←LintDriver.access$checkProjectRoot(LintDriver.kt:158)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:459)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:452)←LintDriver.doAnalyze(LintDriver.kt:519)←LintDriver.analyzeOnly(LintDriver.kt:452)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient.run(LintCliClient.kt:289)←LintCliClient.run$default(LintCliClient.kt:272)←LintCliClient.analyzeOnly(LintCliClient.kt:247)←Main.run(Main.java:1675)←Main.run(Main.java:281)←NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)←NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)←DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)←Method.invoke(Method.java:566)←AndroidLintWorkAction.invokeLintMainRunMethod(AndroidLintWorkAction.kt:99)←AndroidLintWorkAction.runLint(AndroidLintWorkAction.kt:88)←AndroidLintWorkAction.execute(AndroidLintWorkAction.kt:65)←DefaultWorkerServer.execute(DefaultWorkerServer.java:63)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:66)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:62)←ClassLoaderUtils.executeInClassloader(ClassLoaderUtils.java:97)←NoIsolationWorkerFactory$1.lambda$execute$0(NoIsolationWorkerFactory.java:62)←AbstractWorker$1.call(AbstractWorker.java:44)←AbstractWorker$1.call(AbstractWorker.java:41)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)←DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)←AbstractWorker.executeWrappedInBuildOperation(AbstractWorker.java:41)←NoIsolationWorkerFactory$1.execute(NoIsolationWorkerFactory.java:59)←DefaultWorkerExecutor.lambda$submitWork$2(DefaultWorkerExecutor.java:205)←FutureTask.run(FutureTask.java:264)←DefaultConditionalExecutionQueue$ExecutionRunner.runExecution(DefaultConditionalExecutionQueue.java:187)←DefaultConditionalExecutionQueue$ExecutionRunner.access$700(DefaultConditionalExecutionQueue.java:120)←DefaultConditionalExecutionQueue$ExecutionRunner$1.run(DefaultConditionalExecutionQueue.java:162)←Factories$1.create(Factories.java:31)←DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:270)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:119)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:124)←DefaultConditionalExecutionQueue$ExecutionRunner.runBatch(DefaultConditionalExecutionQueue.java:157)←DefaultConditionalExecutionQueue$ExecutionRunner.run(DefaultConditionalExecutionQueue.java:126)←Executors$RunnableAdapter.call(Executors.java:515)←FutureTask.run(FutureTask.java:264)←ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)←ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)←ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)←ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)←Thread.run(Thread.java:834)`&#xA;&#xA;You can run with --stacktrace or set environment variable `LINT_PRINT_STACKTRACE=true` to dump a full stacktrace to stdout.">
        <location
            file="src/main/java/com/gcode/vasttools/skin/model/VastSkinView.kt"/>
    </issue>

    <issue
        id="LintError"
        message="Unexpected failure during lint analysis of VastVbActivity.kt (this is a bug in lint or one of the libraries it depends on)&#xA;&#xA;Message: class androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler tried to access protected method org.jetbrains.uast.kotlin.KotlinUClass.getKtClass()Lorg/jetbrains/kotlin/psi/KtClassOrObject; (androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler is in unnamed module of loader com.intellij.util.lang.UrlClassLoader @c37c1ae; org.jetbrains.uast.kotlin.KotlinUClass is in unnamed module of loader java.net.URLClassLoader @647ea89d)&#xA;&#xA;The crash seems to involve the detector `androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector`.&#xA;You can try disabling it with something like this:&#xA;    android {&#xA;        lint {&#xA;            disable &quot;DialogFragmentCallbacksDetector&quot;&#xA;        }&#xA;    }&#xA;&#xA;Stack: `IllegalAccessError:OnCreateDialogIncorrectCallbackDetector$UastHandler.visitClass(OnCreateDialogIncorrectCallbackDetector.kt:78)←UElementVisitor$DispatchPsiVisitor.visitClass(UElementVisitor.kt:553)←UElementVisitor$DelegatingPsiVisitor.visitClass(UElementVisitor.kt:1162)←AbstractKotlinUClass.accept(AbstractKotlinUClass.kt:43)←ImplementationUtilsKt.acceptList(implementationUtils.kt:29)←UFile$DefaultImpls.accept(UFile.kt:87)←KotlinUFile.accept(KotlinUFile.kt:15)←UastLintUtilsKt.acceptSourceFile(UastLintUtils.kt:515)←UElementVisitor$visitFile$3.run(UElementVisitor.kt:274)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←UElementVisitor.visitFile(UElementVisitor.kt:271)←LintDriver$visitUastDetectors$1.run(LintDriver.kt:2073)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←LintDriver.visitUastDetectors(LintDriver.kt:2073)←LintDriver.visitUast(LintDriver.kt:2032)←LintDriver.runFileDetectors(LintDriver.kt:1421)←LintDriver.checkProject(LintDriver.kt:1185)←LintDriver.checkProjectRoot(LintDriver.kt:645)←LintDriver.access$checkProjectRoot(LintDriver.kt:158)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:459)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:452)←LintDriver.doAnalyze(LintDriver.kt:519)←LintDriver.analyzeOnly(LintDriver.kt:452)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient.run(LintCliClient.kt:289)←LintCliClient.run$default(LintCliClient.kt:272)←LintCliClient.analyzeOnly(LintCliClient.kt:247)←Main.run(Main.java:1675)←Main.run(Main.java:281)←NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)←NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)←DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)←Method.invoke(Method.java:566)←AndroidLintWorkAction.invokeLintMainRunMethod(AndroidLintWorkAction.kt:99)←AndroidLintWorkAction.runLint(AndroidLintWorkAction.kt:88)←AndroidLintWorkAction.execute(AndroidLintWorkAction.kt:65)←DefaultWorkerServer.execute(DefaultWorkerServer.java:63)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:66)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:62)←ClassLoaderUtils.executeInClassloader(ClassLoaderUtils.java:97)←NoIsolationWorkerFactory$1.lambda$execute$0(NoIsolationWorkerFactory.java:62)←AbstractWorker$1.call(AbstractWorker.java:44)←AbstractWorker$1.call(AbstractWorker.java:41)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)←DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)←AbstractWorker.executeWrappedInBuildOperation(AbstractWorker.java:41)←NoIsolationWorkerFactory$1.execute(NoIsolationWorkerFactory.java:59)←DefaultWorkerExecutor.lambda$submitWork$2(DefaultWorkerExecutor.java:205)←FutureTask.run(FutureTask.java:264)←DefaultConditionalExecutionQueue$ExecutionRunner.runExecution(DefaultConditionalExecutionQueue.java:187)←DefaultConditionalExecutionQueue$ExecutionRunner.access$700(DefaultConditionalExecutionQueue.java:120)←DefaultConditionalExecutionQueue$ExecutionRunner$1.run(DefaultConditionalExecutionQueue.java:162)←Factories$1.create(Factories.java:31)←DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:270)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:119)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:124)←DefaultConditionalExecutionQueue$ExecutionRunner.runBatch(DefaultConditionalExecutionQueue.java:157)←DefaultConditionalExecutionQueue$ExecutionRunner.run(DefaultConditionalExecutionQueue.java:126)←Executors$RunnableAdapter.call(Executors.java:515)←FutureTask.run(FutureTask.java:264)←ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)←ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)←ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)←ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)←Thread.run(Thread.java:834)`&#xA;&#xA;You can run with --stacktrace or set environment variable `LINT_PRINT_STACKTRACE=true` to dump a full stacktrace to stdout.">
        <location
            file="src/main/java/com/gcode/vasttools/activity/VastVbActivity.kt"/>
    </issue>

    <issue
        id="LintError"
        message="Unexpected failure during lint analysis of VastVbFragment.kt (this is a bug in lint or one of the libraries it depends on)&#xA;&#xA;Message: class androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler tried to access protected method org.jetbrains.uast.kotlin.KotlinUClass.getKtClass()Lorg/jetbrains/kotlin/psi/KtClassOrObject; (androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler is in unnamed module of loader com.intellij.util.lang.UrlClassLoader @c37c1ae; org.jetbrains.uast.kotlin.KotlinUClass is in unnamed module of loader java.net.URLClassLoader @647ea89d)&#xA;&#xA;The crash seems to involve the detector `androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector`.&#xA;You can try disabling it with something like this:&#xA;    android {&#xA;        lint {&#xA;            disable &quot;DialogFragmentCallbacksDetector&quot;&#xA;        }&#xA;    }&#xA;&#xA;Stack: `IllegalAccessError:OnCreateDialogIncorrectCallbackDetector$UastHandler.visitClass(OnCreateDialogIncorrectCallbackDetector.kt:78)←UElementVisitor$DispatchPsiVisitor.visitClass(UElementVisitor.kt:553)←UElementVisitor$DelegatingPsiVisitor.visitClass(UElementVisitor.kt:1162)←AbstractKotlinUClass.accept(AbstractKotlinUClass.kt:43)←ImplementationUtilsKt.acceptList(implementationUtils.kt:29)←UFile$DefaultImpls.accept(UFile.kt:87)←KotlinUFile.accept(KotlinUFile.kt:15)←UastLintUtilsKt.acceptSourceFile(UastLintUtils.kt:515)←UElementVisitor$visitFile$3.run(UElementVisitor.kt:274)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←UElementVisitor.visitFile(UElementVisitor.kt:271)←LintDriver$visitUastDetectors$1.run(LintDriver.kt:2073)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←LintDriver.visitUastDetectors(LintDriver.kt:2073)←LintDriver.visitUast(LintDriver.kt:2032)←LintDriver.runFileDetectors(LintDriver.kt:1421)←LintDriver.checkProject(LintDriver.kt:1185)←LintDriver.checkProjectRoot(LintDriver.kt:645)←LintDriver.access$checkProjectRoot(LintDriver.kt:158)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:459)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:452)←LintDriver.doAnalyze(LintDriver.kt:519)←LintDriver.analyzeOnly(LintDriver.kt:452)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient.run(LintCliClient.kt:289)←LintCliClient.run$default(LintCliClient.kt:272)←LintCliClient.analyzeOnly(LintCliClient.kt:247)←Main.run(Main.java:1675)←Main.run(Main.java:281)←NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)←NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)←DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)←Method.invoke(Method.java:566)←AndroidLintWorkAction.invokeLintMainRunMethod(AndroidLintWorkAction.kt:99)←AndroidLintWorkAction.runLint(AndroidLintWorkAction.kt:88)←AndroidLintWorkAction.execute(AndroidLintWorkAction.kt:65)←DefaultWorkerServer.execute(DefaultWorkerServer.java:63)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:66)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:62)←ClassLoaderUtils.executeInClassloader(ClassLoaderUtils.java:97)←NoIsolationWorkerFactory$1.lambda$execute$0(NoIsolationWorkerFactory.java:62)←AbstractWorker$1.call(AbstractWorker.java:44)←AbstractWorker$1.call(AbstractWorker.java:41)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)←DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)←AbstractWorker.executeWrappedInBuildOperation(AbstractWorker.java:41)←NoIsolationWorkerFactory$1.execute(NoIsolationWorkerFactory.java:59)←DefaultWorkerExecutor.lambda$submitWork$2(DefaultWorkerExecutor.java:205)←FutureTask.run(FutureTask.java:264)←DefaultConditionalExecutionQueue$ExecutionRunner.runExecution(DefaultConditionalExecutionQueue.java:187)←DefaultConditionalExecutionQueue$ExecutionRunner.access$700(DefaultConditionalExecutionQueue.java:120)←DefaultConditionalExecutionQueue$ExecutionRunner$1.run(DefaultConditionalExecutionQueue.java:162)←Factories$1.create(Factories.java:31)←DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:270)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:119)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:124)←DefaultConditionalExecutionQueue$ExecutionRunner.runBatch(DefaultConditionalExecutionQueue.java:157)←DefaultConditionalExecutionQueue$ExecutionRunner.run(DefaultConditionalExecutionQueue.java:126)←Executors$RunnableAdapter.call(Executors.java:515)←FutureTask.run(FutureTask.java:264)←ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)←ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)←ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)←ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)←Thread.run(Thread.java:834)`&#xA;&#xA;You can run with --stacktrace or set environment variable `LINT_PRINT_STACKTRACE=true` to dump a full stacktrace to stdout.">
        <location
            file="src/main/java/com/gcode/vasttools/fragment/VastVbFragment.kt"/>
    </issue>

    <issue
        id="LintError"
        message="Unexpected failure during lint analysis of VastVbVmActivity.kt (this is a bug in lint or one of the libraries it depends on)&#xA;&#xA;Message: class androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler tried to access protected method org.jetbrains.uast.kotlin.KotlinUClass.getKtClass()Lorg/jetbrains/kotlin/psi/KtClassOrObject; (androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler is in unnamed module of loader com.intellij.util.lang.UrlClassLoader @c37c1ae; org.jetbrains.uast.kotlin.KotlinUClass is in unnamed module of loader java.net.URLClassLoader @647ea89d)&#xA;&#xA;The crash seems to involve the detector `androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector`.&#xA;You can try disabling it with something like this:&#xA;    android {&#xA;        lint {&#xA;            disable &quot;DialogFragmentCallbacksDetector&quot;&#xA;        }&#xA;    }&#xA;&#xA;Stack: `IllegalAccessError:OnCreateDialogIncorrectCallbackDetector$UastHandler.visitClass(OnCreateDialogIncorrectCallbackDetector.kt:78)←UElementVisitor$DispatchPsiVisitor.visitClass(UElementVisitor.kt:553)←UElementVisitor$DelegatingPsiVisitor.visitClass(UElementVisitor.kt:1162)←AbstractKotlinUClass.accept(AbstractKotlinUClass.kt:43)←ImplementationUtilsKt.acceptList(implementationUtils.kt:29)←UFile$DefaultImpls.accept(UFile.kt:87)←KotlinUFile.accept(KotlinUFile.kt:15)←UastLintUtilsKt.acceptSourceFile(UastLintUtils.kt:515)←UElementVisitor$visitFile$3.run(UElementVisitor.kt:274)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←UElementVisitor.visitFile(UElementVisitor.kt:271)←LintDriver$visitUastDetectors$1.run(LintDriver.kt:2073)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←LintDriver.visitUastDetectors(LintDriver.kt:2073)←LintDriver.visitUast(LintDriver.kt:2032)←LintDriver.runFileDetectors(LintDriver.kt:1421)←LintDriver.checkProject(LintDriver.kt:1185)←LintDriver.checkProjectRoot(LintDriver.kt:645)←LintDriver.access$checkProjectRoot(LintDriver.kt:158)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:459)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:452)←LintDriver.doAnalyze(LintDriver.kt:519)←LintDriver.analyzeOnly(LintDriver.kt:452)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient.run(LintCliClient.kt:289)←LintCliClient.run$default(LintCliClient.kt:272)←LintCliClient.analyzeOnly(LintCliClient.kt:247)←Main.run(Main.java:1675)←Main.run(Main.java:281)←NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)←NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)←DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)←Method.invoke(Method.java:566)←AndroidLintWorkAction.invokeLintMainRunMethod(AndroidLintWorkAction.kt:99)←AndroidLintWorkAction.runLint(AndroidLintWorkAction.kt:88)←AndroidLintWorkAction.execute(AndroidLintWorkAction.kt:65)←DefaultWorkerServer.execute(DefaultWorkerServer.java:63)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:66)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:62)←ClassLoaderUtils.executeInClassloader(ClassLoaderUtils.java:97)←NoIsolationWorkerFactory$1.lambda$execute$0(NoIsolationWorkerFactory.java:62)←AbstractWorker$1.call(AbstractWorker.java:44)←AbstractWorker$1.call(AbstractWorker.java:41)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)←DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)←AbstractWorker.executeWrappedInBuildOperation(AbstractWorker.java:41)←NoIsolationWorkerFactory$1.execute(NoIsolationWorkerFactory.java:59)←DefaultWorkerExecutor.lambda$submitWork$2(DefaultWorkerExecutor.java:205)←FutureTask.run(FutureTask.java:264)←DefaultConditionalExecutionQueue$ExecutionRunner.runExecution(DefaultConditionalExecutionQueue.java:187)←DefaultConditionalExecutionQueue$ExecutionRunner.access$700(DefaultConditionalExecutionQueue.java:120)←DefaultConditionalExecutionQueue$ExecutionRunner$1.run(DefaultConditionalExecutionQueue.java:162)←Factories$1.create(Factories.java:31)←DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:270)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:119)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:124)←DefaultConditionalExecutionQueue$ExecutionRunner.runBatch(DefaultConditionalExecutionQueue.java:157)←DefaultConditionalExecutionQueue$ExecutionRunner.run(DefaultConditionalExecutionQueue.java:126)←Executors$RunnableAdapter.call(Executors.java:515)←FutureTask.run(FutureTask.java:264)←ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)←ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)←ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)←ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)←Thread.run(Thread.java:834)`&#xA;&#xA;You can run with --stacktrace or set environment variable `LINT_PRINT_STACKTRACE=true` to dump a full stacktrace to stdout.">
        <location
            file="src/main/java/com/gcode/vasttools/activity/VastVbVmActivity.kt"/>
    </issue>

    <issue
        id="LintError"
        message="Unexpected failure during lint analysis of VastVbVmFragment.kt (this is a bug in lint or one of the libraries it depends on)&#xA;&#xA;Message: class androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler tried to access protected method org.jetbrains.uast.kotlin.KotlinUClass.getKtClass()Lorg/jetbrains/kotlin/psi/KtClassOrObject; (androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler is in unnamed module of loader com.intellij.util.lang.UrlClassLoader @c37c1ae; org.jetbrains.uast.kotlin.KotlinUClass is in unnamed module of loader java.net.URLClassLoader @647ea89d)&#xA;&#xA;The crash seems to involve the detector `androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector`.&#xA;You can try disabling it with something like this:&#xA;    android {&#xA;        lint {&#xA;            disable &quot;DialogFragmentCallbacksDetector&quot;&#xA;        }&#xA;    }&#xA;&#xA;Stack: `IllegalAccessError:OnCreateDialogIncorrectCallbackDetector$UastHandler.visitClass(OnCreateDialogIncorrectCallbackDetector.kt:78)←UElementVisitor$DispatchPsiVisitor.visitClass(UElementVisitor.kt:553)←UElementVisitor$DelegatingPsiVisitor.visitClass(UElementVisitor.kt:1162)←AbstractKotlinUClass.accept(AbstractKotlinUClass.kt:43)←ImplementationUtilsKt.acceptList(implementationUtils.kt:29)←UFile$DefaultImpls.accept(UFile.kt:87)←KotlinUFile.accept(KotlinUFile.kt:15)←UastLintUtilsKt.acceptSourceFile(UastLintUtils.kt:515)←UElementVisitor$visitFile$3.run(UElementVisitor.kt:274)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←UElementVisitor.visitFile(UElementVisitor.kt:271)←LintDriver$visitUastDetectors$1.run(LintDriver.kt:2073)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←LintDriver.visitUastDetectors(LintDriver.kt:2073)←LintDriver.visitUast(LintDriver.kt:2032)←LintDriver.runFileDetectors(LintDriver.kt:1421)←LintDriver.checkProject(LintDriver.kt:1185)←LintDriver.checkProjectRoot(LintDriver.kt:645)←LintDriver.access$checkProjectRoot(LintDriver.kt:158)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:459)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:452)←LintDriver.doAnalyze(LintDriver.kt:519)←LintDriver.analyzeOnly(LintDriver.kt:452)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient.run(LintCliClient.kt:289)←LintCliClient.run$default(LintCliClient.kt:272)←LintCliClient.analyzeOnly(LintCliClient.kt:247)←Main.run(Main.java:1675)←Main.run(Main.java:281)←NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)←NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)←DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)←Method.invoke(Method.java:566)←AndroidLintWorkAction.invokeLintMainRunMethod(AndroidLintWorkAction.kt:99)←AndroidLintWorkAction.runLint(AndroidLintWorkAction.kt:88)←AndroidLintWorkAction.execute(AndroidLintWorkAction.kt:65)←DefaultWorkerServer.execute(DefaultWorkerServer.java:63)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:66)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:62)←ClassLoaderUtils.executeInClassloader(ClassLoaderUtils.java:97)←NoIsolationWorkerFactory$1.lambda$execute$0(NoIsolationWorkerFactory.java:62)←AbstractWorker$1.call(AbstractWorker.java:44)←AbstractWorker$1.call(AbstractWorker.java:41)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)←DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)←AbstractWorker.executeWrappedInBuildOperation(AbstractWorker.java:41)←NoIsolationWorkerFactory$1.execute(NoIsolationWorkerFactory.java:59)←DefaultWorkerExecutor.lambda$submitWork$2(DefaultWorkerExecutor.java:205)←FutureTask.run(FutureTask.java:264)←DefaultConditionalExecutionQueue$ExecutionRunner.runExecution(DefaultConditionalExecutionQueue.java:187)←DefaultConditionalExecutionQueue$ExecutionRunner.access$700(DefaultConditionalExecutionQueue.java:120)←DefaultConditionalExecutionQueue$ExecutionRunner$1.run(DefaultConditionalExecutionQueue.java:162)←Factories$1.create(Factories.java:31)←DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:270)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:119)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:124)←DefaultConditionalExecutionQueue$ExecutionRunner.runBatch(DefaultConditionalExecutionQueue.java:157)←DefaultConditionalExecutionQueue$ExecutionRunner.run(DefaultConditionalExecutionQueue.java:126)←Executors$RunnableAdapter.call(Executors.java:515)←FutureTask.run(FutureTask.java:264)←ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)←ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)←ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)←ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)←Thread.run(Thread.java:834)`&#xA;&#xA;You can run with --stacktrace or set environment variable `LINT_PRINT_STACKTRACE=true` to dump a full stacktrace to stdout.">
        <location
            file="src/main/java/com/gcode/vasttools/fragment/VastVbVmFragment.kt"/>
    </issue>

    <issue
        id="LintError"
        message="Unexpected failure during lint analysis of VastVmActivity.kt (this is a bug in lint or one of the libraries it depends on)&#xA;&#xA;Message: class androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler tried to access protected method org.jetbrains.uast.kotlin.KotlinUClass.getKtClass()Lorg/jetbrains/kotlin/psi/KtClassOrObject; (androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler is in unnamed module of loader com.intellij.util.lang.UrlClassLoader @c37c1ae; org.jetbrains.uast.kotlin.KotlinUClass is in unnamed module of loader java.net.URLClassLoader @647ea89d)&#xA;&#xA;The crash seems to involve the detector `androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector`.&#xA;You can try disabling it with something like this:&#xA;    android {&#xA;        lint {&#xA;            disable &quot;DialogFragmentCallbacksDetector&quot;&#xA;        }&#xA;    }&#xA;&#xA;Stack: `IllegalAccessError:OnCreateDialogIncorrectCallbackDetector$UastHandler.visitClass(OnCreateDialogIncorrectCallbackDetector.kt:78)←UElementVisitor$DispatchPsiVisitor.visitClass(UElementVisitor.kt:553)←UElementVisitor$DelegatingPsiVisitor.visitClass(UElementVisitor.kt:1162)←AbstractKotlinUClass.accept(AbstractKotlinUClass.kt:43)←ImplementationUtilsKt.acceptList(implementationUtils.kt:29)←UFile$DefaultImpls.accept(UFile.kt:87)←KotlinUFile.accept(KotlinUFile.kt:15)←UastLintUtilsKt.acceptSourceFile(UastLintUtils.kt:515)←UElementVisitor$visitFile$3.run(UElementVisitor.kt:274)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←UElementVisitor.visitFile(UElementVisitor.kt:271)←LintDriver$visitUastDetectors$1.run(LintDriver.kt:2073)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←LintDriver.visitUastDetectors(LintDriver.kt:2073)←LintDriver.visitUast(LintDriver.kt:2032)←LintDriver.runFileDetectors(LintDriver.kt:1421)←LintDriver.checkProject(LintDriver.kt:1185)←LintDriver.checkProjectRoot(LintDriver.kt:645)←LintDriver.access$checkProjectRoot(LintDriver.kt:158)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:459)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:452)←LintDriver.doAnalyze(LintDriver.kt:519)←LintDriver.analyzeOnly(LintDriver.kt:452)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient.run(LintCliClient.kt:289)←LintCliClient.run$default(LintCliClient.kt:272)←LintCliClient.analyzeOnly(LintCliClient.kt:247)←Main.run(Main.java:1675)←Main.run(Main.java:281)←NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)←NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)←DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)←Method.invoke(Method.java:566)←AndroidLintWorkAction.invokeLintMainRunMethod(AndroidLintWorkAction.kt:99)←AndroidLintWorkAction.runLint(AndroidLintWorkAction.kt:88)←AndroidLintWorkAction.execute(AndroidLintWorkAction.kt:65)←DefaultWorkerServer.execute(DefaultWorkerServer.java:63)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:66)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:62)←ClassLoaderUtils.executeInClassloader(ClassLoaderUtils.java:97)←NoIsolationWorkerFactory$1.lambda$execute$0(NoIsolationWorkerFactory.java:62)←AbstractWorker$1.call(AbstractWorker.java:44)←AbstractWorker$1.call(AbstractWorker.java:41)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)←DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)←AbstractWorker.executeWrappedInBuildOperation(AbstractWorker.java:41)←NoIsolationWorkerFactory$1.execute(NoIsolationWorkerFactory.java:59)←DefaultWorkerExecutor.lambda$submitWork$2(DefaultWorkerExecutor.java:205)←FutureTask.run(FutureTask.java:264)←DefaultConditionalExecutionQueue$ExecutionRunner.runExecution(DefaultConditionalExecutionQueue.java:187)←DefaultConditionalExecutionQueue$ExecutionRunner.access$700(DefaultConditionalExecutionQueue.java:120)←DefaultConditionalExecutionQueue$ExecutionRunner$1.run(DefaultConditionalExecutionQueue.java:162)←Factories$1.create(Factories.java:31)←DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:270)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:119)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:124)←DefaultConditionalExecutionQueue$ExecutionRunner.runBatch(DefaultConditionalExecutionQueue.java:157)←DefaultConditionalExecutionQueue$ExecutionRunner.run(DefaultConditionalExecutionQueue.java:126)←Executors$RunnableAdapter.call(Executors.java:515)←FutureTask.run(FutureTask.java:264)←ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)←ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)←ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)←ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)←Thread.run(Thread.java:834)`&#xA;&#xA;You can run with --stacktrace or set environment variable `LINT_PRINT_STACKTRACE=true` to dump a full stacktrace to stdout.">
        <location
            file="src/main/java/com/gcode/vasttools/activity/VastVmActivity.kt"/>
    </issue>

    <issue
        id="LintError"
        message="Unexpected failure during lint analysis of VastVmFragment.kt (this is a bug in lint or one of the libraries it depends on)&#xA;&#xA;Message: class androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler tried to access protected method org.jetbrains.uast.kotlin.KotlinUClass.getKtClass()Lorg/jetbrains/kotlin/psi/KtClassOrObject; (androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler is in unnamed module of loader com.intellij.util.lang.UrlClassLoader @c37c1ae; org.jetbrains.uast.kotlin.KotlinUClass is in unnamed module of loader java.net.URLClassLoader @647ea89d)&#xA;&#xA;The crash seems to involve the detector `androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector`.&#xA;You can try disabling it with something like this:&#xA;    android {&#xA;        lint {&#xA;            disable &quot;DialogFragmentCallbacksDetector&quot;&#xA;        }&#xA;    }&#xA;&#xA;Stack: `IllegalAccessError:OnCreateDialogIncorrectCallbackDetector$UastHandler.visitClass(OnCreateDialogIncorrectCallbackDetector.kt:78)←UElementVisitor$DispatchPsiVisitor.visitClass(UElementVisitor.kt:553)←UElementVisitor$DelegatingPsiVisitor.visitClass(UElementVisitor.kt:1162)←AbstractKotlinUClass.accept(AbstractKotlinUClass.kt:43)←ImplementationUtilsKt.acceptList(implementationUtils.kt:29)←UFile$DefaultImpls.accept(UFile.kt:87)←KotlinUFile.accept(KotlinUFile.kt:15)←UastLintUtilsKt.acceptSourceFile(UastLintUtils.kt:515)←UElementVisitor$visitFile$3.run(UElementVisitor.kt:274)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←UElementVisitor.visitFile(UElementVisitor.kt:271)←LintDriver$visitUastDetectors$1.run(LintDriver.kt:2073)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←LintDriver.visitUastDetectors(LintDriver.kt:2073)←LintDriver.visitUast(LintDriver.kt:2032)←LintDriver.runFileDetectors(LintDriver.kt:1421)←LintDriver.checkProject(LintDriver.kt:1185)←LintDriver.checkProjectRoot(LintDriver.kt:645)←LintDriver.access$checkProjectRoot(LintDriver.kt:158)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:459)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:452)←LintDriver.doAnalyze(LintDriver.kt:519)←LintDriver.analyzeOnly(LintDriver.kt:452)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient.run(LintCliClient.kt:289)←LintCliClient.run$default(LintCliClient.kt:272)←LintCliClient.analyzeOnly(LintCliClient.kt:247)←Main.run(Main.java:1675)←Main.run(Main.java:281)←NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)←NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)←DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)←Method.invoke(Method.java:566)←AndroidLintWorkAction.invokeLintMainRunMethod(AndroidLintWorkAction.kt:99)←AndroidLintWorkAction.runLint(AndroidLintWorkAction.kt:88)←AndroidLintWorkAction.execute(AndroidLintWorkAction.kt:65)←DefaultWorkerServer.execute(DefaultWorkerServer.java:63)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:66)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:62)←ClassLoaderUtils.executeInClassloader(ClassLoaderUtils.java:97)←NoIsolationWorkerFactory$1.lambda$execute$0(NoIsolationWorkerFactory.java:62)←AbstractWorker$1.call(AbstractWorker.java:44)←AbstractWorker$1.call(AbstractWorker.java:41)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)←DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)←AbstractWorker.executeWrappedInBuildOperation(AbstractWorker.java:41)←NoIsolationWorkerFactory$1.execute(NoIsolationWorkerFactory.java:59)←DefaultWorkerExecutor.lambda$submitWork$2(DefaultWorkerExecutor.java:205)←FutureTask.run(FutureTask.java:264)←DefaultConditionalExecutionQueue$ExecutionRunner.runExecution(DefaultConditionalExecutionQueue.java:187)←DefaultConditionalExecutionQueue$ExecutionRunner.access$700(DefaultConditionalExecutionQueue.java:120)←DefaultConditionalExecutionQueue$ExecutionRunner$1.run(DefaultConditionalExecutionQueue.java:162)←Factories$1.create(Factories.java:31)←DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:270)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:119)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:124)←DefaultConditionalExecutionQueue$ExecutionRunner.runBatch(DefaultConditionalExecutionQueue.java:157)←DefaultConditionalExecutionQueue$ExecutionRunner.run(DefaultConditionalExecutionQueue.java:126)←Executors$RunnableAdapter.call(Executors.java:515)←FutureTask.run(FutureTask.java:264)←ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)←ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)←ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)←ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)←Thread.run(Thread.java:834)`&#xA;&#xA;You can run with --stacktrace or set environment variable `LINT_PRINT_STACKTRACE=true` to dump a full stacktrace to stdout.">
        <location
            file="src/main/java/com/gcode/vasttools/fragment/VastVmFragment.kt"/>
    </issue>

    <issue
        id="LintError"
        message="Unexpected failure during lint analysis of getVbClass.kt (this is a bug in lint or one of the libraries it depends on)&#xA;&#xA;Message: class androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler tried to access protected method org.jetbrains.uast.kotlin.KotlinUClass.getKtClass()Lorg/jetbrains/kotlin/psi/KtClassOrObject; (androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler is in unnamed module of loader com.intellij.util.lang.UrlClassLoader @c37c1ae; org.jetbrains.uast.kotlin.KotlinUClass is in unnamed module of loader java.net.URLClassLoader @647ea89d)&#xA;&#xA;The crash seems to involve the detector `androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector`.&#xA;You can try disabling it with something like this:&#xA;    android {&#xA;        lint {&#xA;            disable &quot;DialogFragmentCallbacksDetector&quot;&#xA;        }&#xA;    }&#xA;&#xA;Stack: `IllegalAccessError:OnCreateDialogIncorrectCallbackDetector$UastHandler.visitClass(OnCreateDialogIncorrectCallbackDetector.kt:78)←UElementVisitor$DispatchPsiVisitor.visitClass(UElementVisitor.kt:553)←UElementVisitor$DelegatingPsiVisitor.visitClass(UElementVisitor.kt:1162)←AbstractKotlinUClass.accept(AbstractKotlinUClass.kt:43)←ImplementationUtilsKt.acceptList(implementationUtils.kt:29)←UFile$DefaultImpls.accept(UFile.kt:87)←KotlinUFile.accept(KotlinUFile.kt:15)←UastLintUtilsKt.acceptSourceFile(UastLintUtils.kt:515)←UElementVisitor$visitFile$3.run(UElementVisitor.kt:274)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←UElementVisitor.visitFile(UElementVisitor.kt:271)←LintDriver$visitUastDetectors$1.run(LintDriver.kt:2073)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←LintDriver.visitUastDetectors(LintDriver.kt:2073)←LintDriver.visitUast(LintDriver.kt:2032)←LintDriver.runFileDetectors(LintDriver.kt:1421)←LintDriver.checkProject(LintDriver.kt:1185)←LintDriver.checkProjectRoot(LintDriver.kt:645)←LintDriver.access$checkProjectRoot(LintDriver.kt:158)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:459)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:452)←LintDriver.doAnalyze(LintDriver.kt:519)←LintDriver.analyzeOnly(LintDriver.kt:452)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient.run(LintCliClient.kt:289)←LintCliClient.run$default(LintCliClient.kt:272)←LintCliClient.analyzeOnly(LintCliClient.kt:247)←Main.run(Main.java:1675)←Main.run(Main.java:281)←NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)←NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)←DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)←Method.invoke(Method.java:566)←AndroidLintWorkAction.invokeLintMainRunMethod(AndroidLintWorkAction.kt:99)←AndroidLintWorkAction.runLint(AndroidLintWorkAction.kt:88)←AndroidLintWorkAction.execute(AndroidLintWorkAction.kt:65)←DefaultWorkerServer.execute(DefaultWorkerServer.java:63)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:66)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:62)←ClassLoaderUtils.executeInClassloader(ClassLoaderUtils.java:97)←NoIsolationWorkerFactory$1.lambda$execute$0(NoIsolationWorkerFactory.java:62)←AbstractWorker$1.call(AbstractWorker.java:44)←AbstractWorker$1.call(AbstractWorker.java:41)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)←DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)←AbstractWorker.executeWrappedInBuildOperation(AbstractWorker.java:41)←NoIsolationWorkerFactory$1.execute(NoIsolationWorkerFactory.java:59)←DefaultWorkerExecutor.lambda$submitWork$2(DefaultWorkerExecutor.java:205)←FutureTask.run(FutureTask.java:264)←DefaultConditionalExecutionQueue$ExecutionRunner.runExecution(DefaultConditionalExecutionQueue.java:187)←DefaultConditionalExecutionQueue$ExecutionRunner.access$700(DefaultConditionalExecutionQueue.java:120)←DefaultConditionalExecutionQueue$ExecutionRunner$1.run(DefaultConditionalExecutionQueue.java:162)←Factories$1.create(Factories.java:31)←DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:270)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:119)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:124)←DefaultConditionalExecutionQueue$ExecutionRunner.runBatch(DefaultConditionalExecutionQueue.java:157)←DefaultConditionalExecutionQueue$ExecutionRunner.run(DefaultConditionalExecutionQueue.java:126)←Executors$RunnableAdapter.call(Executors.java:515)←FutureTask.run(FutureTask.java:264)←ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)←ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)←ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)←ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)←Thread.run(Thread.java:834)`&#xA;&#xA;You can run with --stacktrace or set environment variable `LINT_PRINT_STACKTRACE=true` to dump a full stacktrace to stdout.">
        <location
            file="src/main/java/com/gcode/vasttools/extension/getVbClass.kt"/>
    </issue>

    <issue
        id="LintError"
        message="Unexpected failure during lint analysis of getVmClass.kt (this is a bug in lint or one of the libraries it depends on)&#xA;&#xA;Message: class androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler tried to access protected method org.jetbrains.uast.kotlin.KotlinUClass.getKtClass()Lorg/jetbrains/kotlin/psi/KtClassOrObject; (androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler is in unnamed module of loader com.intellij.util.lang.UrlClassLoader @c37c1ae; org.jetbrains.uast.kotlin.KotlinUClass is in unnamed module of loader java.net.URLClassLoader @647ea89d)&#xA;&#xA;The crash seems to involve the detector `androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector`.&#xA;You can try disabling it with something like this:&#xA;    android {&#xA;        lint {&#xA;            disable &quot;DialogFragmentCallbacksDetector&quot;&#xA;        }&#xA;    }&#xA;&#xA;Stack: `IllegalAccessError:OnCreateDialogIncorrectCallbackDetector$UastHandler.visitClass(OnCreateDialogIncorrectCallbackDetector.kt:78)←UElementVisitor$DispatchPsiVisitor.visitClass(UElementVisitor.kt:553)←UElementVisitor$DelegatingPsiVisitor.visitClass(UElementVisitor.kt:1162)←AbstractKotlinUClass.accept(AbstractKotlinUClass.kt:43)←ImplementationUtilsKt.acceptList(implementationUtils.kt:29)←UFile$DefaultImpls.accept(UFile.kt:87)←KotlinUFile.accept(KotlinUFile.kt:15)←UastLintUtilsKt.acceptSourceFile(UastLintUtils.kt:515)←UElementVisitor$visitFile$3.run(UElementVisitor.kt:274)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←UElementVisitor.visitFile(UElementVisitor.kt:271)←LintDriver$visitUastDetectors$1.run(LintDriver.kt:2073)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←LintDriver.visitUastDetectors(LintDriver.kt:2073)←LintDriver.visitUast(LintDriver.kt:2032)←LintDriver.runFileDetectors(LintDriver.kt:1421)←LintDriver.checkProject(LintDriver.kt:1185)←LintDriver.checkProjectRoot(LintDriver.kt:645)←LintDriver.access$checkProjectRoot(LintDriver.kt:158)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:459)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:452)←LintDriver.doAnalyze(LintDriver.kt:519)←LintDriver.analyzeOnly(LintDriver.kt:452)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient.run(LintCliClient.kt:289)←LintCliClient.run$default(LintCliClient.kt:272)←LintCliClient.analyzeOnly(LintCliClient.kt:247)←Main.run(Main.java:1675)←Main.run(Main.java:281)←NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)←NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)←DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)←Method.invoke(Method.java:566)←AndroidLintWorkAction.invokeLintMainRunMethod(AndroidLintWorkAction.kt:99)←AndroidLintWorkAction.runLint(AndroidLintWorkAction.kt:88)←AndroidLintWorkAction.execute(AndroidLintWorkAction.kt:65)←DefaultWorkerServer.execute(DefaultWorkerServer.java:63)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:66)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:62)←ClassLoaderUtils.executeInClassloader(ClassLoaderUtils.java:97)←NoIsolationWorkerFactory$1.lambda$execute$0(NoIsolationWorkerFactory.java:62)←AbstractWorker$1.call(AbstractWorker.java:44)←AbstractWorker$1.call(AbstractWorker.java:41)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)←DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)←AbstractWorker.executeWrappedInBuildOperation(AbstractWorker.java:41)←NoIsolationWorkerFactory$1.execute(NoIsolationWorkerFactory.java:59)←DefaultWorkerExecutor.lambda$submitWork$2(DefaultWorkerExecutor.java:205)←FutureTask.run(FutureTask.java:264)←DefaultConditionalExecutionQueue$ExecutionRunner.runExecution(DefaultConditionalExecutionQueue.java:187)←DefaultConditionalExecutionQueue$ExecutionRunner.access$700(DefaultConditionalExecutionQueue.java:120)←DefaultConditionalExecutionQueue$ExecutionRunner$1.run(DefaultConditionalExecutionQueue.java:162)←Factories$1.create(Factories.java:31)←DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:270)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:119)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:124)←DefaultConditionalExecutionQueue$ExecutionRunner.runBatch(DefaultConditionalExecutionQueue.java:157)←DefaultConditionalExecutionQueue$ExecutionRunner.run(DefaultConditionalExecutionQueue.java:126)←Executors$RunnableAdapter.call(Executors.java:515)←FutureTask.run(FutureTask.java:264)←ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)←ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)←ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)←ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)←Thread.run(Thread.java:834)`&#xA;&#xA;You can run with --stacktrace or set environment variable `LINT_PRINT_STACKTRACE=true` to dump a full stacktrace to stdout.">
        <location
            file="src/main/java/com/gcode/vasttools/extension/getVmClass.kt"/>
    </issue>

    <issue
        id="LintError"
        message="Unexpected failure during lint analysis of initSetting.kt (this is a bug in lint or one of the libraries it depends on)&#xA;&#xA;Message: class androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler tried to access protected method org.jetbrains.uast.kotlin.KotlinUClass.getKtClass()Lorg/jetbrains/kotlin/psi/KtClassOrObject; (androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector$UastHandler is in unnamed module of loader com.intellij.util.lang.UrlClassLoader @c37c1ae; org.jetbrains.uast.kotlin.KotlinUClass is in unnamed module of loader java.net.URLClassLoader @647ea89d)&#xA;&#xA;The crash seems to involve the detector `androidx.fragment.lint.OnCreateDialogIncorrectCallbackDetector`.&#xA;You can try disabling it with something like this:&#xA;    android {&#xA;        lint {&#xA;            disable &quot;DialogFragmentCallbacksDetector&quot;&#xA;        }&#xA;    }&#xA;&#xA;Stack: `IllegalAccessError:OnCreateDialogIncorrectCallbackDetector$UastHandler.visitClass(OnCreateDialogIncorrectCallbackDetector.kt:78)←UElementVisitor$DispatchPsiVisitor.visitClass(UElementVisitor.kt:553)←UElementVisitor$DelegatingPsiVisitor.visitClass(UElementVisitor.kt:1162)←AbstractKotlinUClass.accept(AbstractKotlinUClass.kt:43)←ImplementationUtilsKt.acceptList(implementationUtils.kt:29)←UFile$DefaultImpls.accept(UFile.kt:87)←KotlinUFile.accept(KotlinUFile.kt:15)←UastLintUtilsKt.acceptSourceFile(UastLintUtils.kt:515)←UElementVisitor$visitFile$3.run(UElementVisitor.kt:274)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←UElementVisitor.visitFile(UElementVisitor.kt:271)←LintDriver$visitUastDetectors$1.run(LintDriver.kt:2073)←LintClient.runReadAction(LintClient.kt:1775)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2757)←LintDriver.visitUastDetectors(LintDriver.kt:2073)←LintDriver.visitUast(LintDriver.kt:2032)←LintDriver.runFileDetectors(LintDriver.kt:1421)←LintDriver.checkProject(LintDriver.kt:1185)←LintDriver.checkProjectRoot(LintDriver.kt:645)←LintDriver.access$checkProjectRoot(LintDriver.kt:158)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:459)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:452)←LintDriver.doAnalyze(LintDriver.kt:519)←LintDriver.analyzeOnly(LintDriver.kt:452)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient.run(LintCliClient.kt:289)←LintCliClient.run$default(LintCliClient.kt:272)←LintCliClient.analyzeOnly(LintCliClient.kt:247)←Main.run(Main.java:1675)←Main.run(Main.java:281)←NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)←NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)←DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)←Method.invoke(Method.java:566)←AndroidLintWorkAction.invokeLintMainRunMethod(AndroidLintWorkAction.kt:99)←AndroidLintWorkAction.runLint(AndroidLintWorkAction.kt:88)←AndroidLintWorkAction.execute(AndroidLintWorkAction.kt:65)←DefaultWorkerServer.execute(DefaultWorkerServer.java:63)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:66)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:62)←ClassLoaderUtils.executeInClassloader(ClassLoaderUtils.java:97)←NoIsolationWorkerFactory$1.lambda$execute$0(NoIsolationWorkerFactory.java:62)←AbstractWorker$1.call(AbstractWorker.java:44)←AbstractWorker$1.call(AbstractWorker.java:41)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)←DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)←AbstractWorker.executeWrappedInBuildOperation(AbstractWorker.java:41)←NoIsolationWorkerFactory$1.execute(NoIsolationWorkerFactory.java:59)←DefaultWorkerExecutor.lambda$submitWork$2(DefaultWorkerExecutor.java:205)←FutureTask.run(FutureTask.java:264)←DefaultConditionalExecutionQueue$ExecutionRunner.runExecution(DefaultConditionalExecutionQueue.java:187)←DefaultConditionalExecutionQueue$ExecutionRunner.access$700(DefaultConditionalExecutionQueue.java:120)←DefaultConditionalExecutionQueue$ExecutionRunner$1.run(DefaultConditionalExecutionQueue.java:162)←Factories$1.create(Factories.java:31)←DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:270)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:119)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:124)←DefaultConditionalExecutionQueue$ExecutionRunner.runBatch(DefaultConditionalExecutionQueue.java:157)←DefaultConditionalExecutionQueue$ExecutionRunner.run(DefaultConditionalExecutionQueue.java:126)←Executors$RunnableAdapter.call(Executors.java:515)←FutureTask.run(FutureTask.java:264)←ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)←ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)←ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)←ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)←Thread.run(Thread.java:834)`&#xA;&#xA;You can run with --stacktrace or set environment variable `LINT_PRINT_STACKTRACE=true` to dump a full stacktrace to stdout.">
        <location
            file="src/main/java/com/gcode/vasttools/extension/initSetting.kt"/>
    </issue>

    <issue
        id="GradleDependency"
        message="A newer version of com.squareup.okhttp3:okhttp than 5.0.0-alpha.6 is available: 5.0.0-alpha.8"
        errorLine1=""
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="build.gradle"
            line="38"
            column="20"/>
    </issue>

    <issue
        id="GradleDependency"
        message="A newer version of androidx.appcompat:appcompat than 1.4.1 is available: 1.4.2"
        errorLine1="dependencies {"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="build.gradle"
            line="39"
            column="20"/>
    </issue>

    <issue
        id="GradleDependency"
        message="A newer version of com.google.android.material:material than 1.6.0 is available: 1.6.1"
        errorLine1="    implementation &apos;androidx.appcompat:appcompat:1.4.1&apos;"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="build.gradle"
            line="42"
            column="20"/>
    </issue>

    <issue
        id="GradleDependency"
        message="A newer version of androidx.core:core-ktx than 1.7.0 is available: 1.8.0"
        errorLine1="    implementation &quot;androidx.fragment:fragment-ktx:1.4.1&quot;"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="build.gradle"
            line="43"
            column="20"/>
    </issue>

</issues>
